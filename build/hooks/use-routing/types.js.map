{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../src/hooks/use-routing/types.ts"],"names":[],"mappings":"","sourcesContent":["import {\n  useNavigation,\n  useRoute,\n  RouteProp,\n  ParamListBase,\n  NavigationProp,\n} from '@react-navigation/native'\n\ntype GenericRoute = {\n  /**\n   * React navigation route & web page URL extension\n   */\n  routeName: string\n  key?: string\n  /**\n   * (optional) Dictionary that will be accessed via `getParams` in the target screen.\n   */\n  params?: object\n  /**\n   * Dictionary that will only be used for web:\n   *\n   * @example\n   *\n   * The following will use the `home` route in react navigation.\n   *\n   * However, it will use the `pages/index.tsx` file for next. Also, it will show up as `domain.com/inbox` in the address bar.\n   *\n   * ```es6\n   * export default function Button() {\n   *   return (\n   *     <Link routeName=\"home\" web={{\n   *      path: '/',\n   *      as: 'inbox'\n   *     }}>\n   *      <Text>Press me</Text>\n   *     </Link>\n   *   )\n   * }\n   * ```\n   */\n  web?: {\n    /**\n     * Alternative path to override routeName on web.\n     */\n    path?: string\n    /**\n     * A custom URL ending to show in the browser address bar instead of the `web.path` or `routeName`.\n     *\n     * Should start with `/`.\n     */\n    as?: string\n  }\n}\n\nexport type NavigateTo = GenericRoute\n\nexport type DefaultRouteProp = RouteProp<ParamListBase, string>\nexport type DefaultNavigationProp = NavigationProp<ParamListBase>\n"]}